// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: helloworld.proto
// Protobuf C++ Version: 6.31.0

#include "helloworld.pb.h"

#include <algorithm>
#include <type_traits>

#include "google/protobuf/descriptor.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/wire_format_lite.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace helloworld {

inline constexpr HelloWorldResponse::Impl_::Impl_(::_pbi::ConstantInitialized) noexcept
    : _cached_size_{0},
      message_(&::google::protobuf::internal::fixed_address_empty_string,
               ::_pbi::ConstantInitialized()),
      current_count_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR HelloWorldResponse::HelloWorldResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HelloWorldResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HelloWorldResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloWorldResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloWorldResponseDefaultTypeInternal() {}
  union {
    HelloWorldResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
    HelloWorldResponseDefaultTypeInternal _HelloWorldResponse_default_instance_;

inline constexpr HelloWorldRequest::Impl_::Impl_(::_pbi::ConstantInitialized) noexcept
    : _cached_size_{0},
      message_(&::google::protobuf::internal::fixed_address_empty_string,
               ::_pbi::ConstantInitialized()),
      increment_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR HelloWorldRequest::HelloWorldRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HelloWorldRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HelloWorldRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HelloWorldRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HelloWorldRequestDefaultTypeInternal() {}
  union {
    HelloWorldRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
    HelloWorldRequestDefaultTypeInternal _HelloWorldRequest_default_instance_;
}  // namespace helloworld
static constexpr const ::_pb::EnumDescriptor* PROTOBUF_NONNULL* PROTOBUF_NULLABLE
    file_level_enum_descriptors_helloworld_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor* PROTOBUF_NONNULL* PROTOBUF_NULLABLE
    file_level_service_descriptors_helloworld_2eproto = nullptr;
const ::uint32_t TableStruct_helloworld_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    0x081,  // bitmap
    PROTOBUF_FIELD_OFFSET(::helloworld::HelloWorldRequest, _impl_._has_bits_),
    5,  // hasbit index offset
    PROTOBUF_FIELD_OFFSET(::helloworld::HelloWorldRequest, _impl_.increment_),
    PROTOBUF_FIELD_OFFSET(::helloworld::HelloWorldRequest, _impl_.message_),
    1,
    0,
    0x081,  // bitmap
    PROTOBUF_FIELD_OFFSET(::helloworld::HelloWorldResponse, _impl_._has_bits_),
    5,  // hasbit index offset
    PROTOBUF_FIELD_OFFSET(::helloworld::HelloWorldResponse, _impl_.current_count_),
    PROTOBUF_FIELD_OFFSET(::helloworld::HelloWorldResponse, _impl_.message_),
    1,
    0,
};

static const ::_pbi::MigrationSchema schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
    {0, sizeof(::helloworld::HelloWorldRequest)},
    {7, sizeof(::helloworld::HelloWorldResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::helloworld::_HelloWorldRequest_default_instance_._instance,
    &::helloworld::_HelloWorldResponse_default_instance_._instance,
};
const char descriptor_table_protodef_helloworld_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020helloworld.proto\022\nhelloworld\"7\n\021HelloW"
    "orldRequest\022\021\n\tincrement\030\001 \001(\003\022\017\n\007messag"
    "e\030\002 \001(\t\"<\n\022HelloWorldResponse\022\025\n\rcurrent"
    "_count\030\001 \001(\003\022\017\n\007message\030\002 "
    "\001(\t2X\n\007Greeter"
    "\022M\n\nHelloWorld\022\035.helloworld.HelloWorldRe"
    "quest\032\036.helloworld.HelloWorldResponse\"\000b"
    "\006proto3"};
static ::absl::once_flag descriptor_table_helloworld_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_helloworld_2eproto = {
    false,
    false,
    247,
    descriptor_table_protodef_helloworld_2eproto,
    "helloworld.proto",
    &descriptor_table_helloworld_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_helloworld_2eproto::offsets,
    file_level_enum_descriptors_helloworld_2eproto,
    file_level_service_descriptors_helloworld_2eproto,
};
namespace helloworld {
// ===================================================================

class HelloWorldRequest::_Internal {
 public:
  using HasBits = decltype(::std::declval<HelloWorldRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HelloWorldRequest, _impl_._has_bits_);
};

HelloWorldRequest::HelloWorldRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HelloWorldRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:helloworld.HelloWorldRequest)
}
PROTOBUF_NDEBUG_INLINE HelloWorldRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::helloworld::HelloWorldRequest& from_msg)
    : _has_bits_{from._has_bits_}, _cached_size_{0}, message_(arena, from.message_) {}

HelloWorldRequest::HelloWorldRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                                     const HelloWorldRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HelloWorldRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HelloWorldRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.increment_ = from._impl_.increment_;

  // @@protoc_insertion_point(copy_constructor:helloworld.HelloWorldRequest)
}
PROTOBUF_NDEBUG_INLINE HelloWorldRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : _cached_size_{0}, message_(arena) {}

inline void HelloWorldRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.increment_ = {};
}
HelloWorldRequest::~HelloWorldRequest() {
  // @@protoc_insertion_point(destructor:helloworld.HelloWorldRequest)
  SharedDtor(*this);
}
inline void HelloWorldRequest::SharedDtor(MessageLite& self) {
  HelloWorldRequest& this_ = static_cast<HelloWorldRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL
HelloWorldRequest::PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                 ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HelloWorldRequest(arena);
}
constexpr auto HelloWorldRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HelloWorldRequest),
                                                                alignof(HelloWorldRequest));
}
constexpr auto HelloWorldRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HelloWorldRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HelloWorldRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HelloWorldRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HelloWorldRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HelloWorldRequest>(),
          &HelloWorldRequest::ByteSizeLong,
          &HelloWorldRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HelloWorldRequest, _impl_._cached_size_),
          false,
      },
      &HelloWorldRequest::kDescriptorMethods, &descriptor_table_helloworld_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
    HelloWorldRequest_class_data_ = HelloWorldRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HelloWorldRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HelloWorldRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HelloWorldRequest_class_data_.tc_table);
  return HelloWorldRequest_class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<1, 2, 0, 44, 2>
    HelloWorldRequest::_table_ = {
        {
            PROTOBUF_FIELD_OFFSET(HelloWorldRequest, _impl_._has_bits_),
            0,     // no _extensions_
            2, 8,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967292,  // skipmap
            offsetof(decltype(_table_), field_entries),
            2,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            HelloWorldRequest_class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<::helloworld::HelloWorldRequest>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // string message = 2;
            {::_pbi::TcParser::FastUS1,
             {18, 0, 0, PROTOBUF_FIELD_OFFSET(HelloWorldRequest, _impl_.message_)}},
            // int64 increment = 1;
            {::_pbi::TcParser::SingularVarintNoZag1<
                 ::uint64_t, offsetof(HelloWorldRequest, _impl_.increment_), 1>(),
             {8, 1, 0, PROTOBUF_FIELD_OFFSET(HelloWorldRequest, _impl_.increment_)}},
        }},
        {{65535, 65535}},
        {{
            // int64 increment = 1;
            {PROTOBUF_FIELD_OFFSET(HelloWorldRequest, _impl_.increment_),
             _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
            // string message = 2;
            {PROTOBUF_FIELD_OFFSET(HelloWorldRequest, _impl_.message_),
             _Internal::kHasBitsOffset + 0, 0,
             (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
        }},
        // no aux_entries
        {{"\34\0\7\0\0\0\0\0"
          "helloworld.HelloWorldRequest"
          "message"}},
    };
PROTOBUF_NOINLINE void HelloWorldRequest::Clear() {
  // @@protoc_insertion_point(message_clear_start:helloworld.HelloWorldRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  _impl_.increment_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HelloWorldRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HelloWorldRequest& this_ = static_cast<const HelloWorldRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HelloWorldRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HelloWorldRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.HelloWorldRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 increment = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_increment() != 0) {
      target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
          stream, this_._internal_increment(), target);
    }
  }

  // string message = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "helloworld.HelloWorldRequest.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance),
        target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:helloworld.HelloWorldRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HelloWorldRequest::ByteSizeLong(const MessageLite& base) {
  const HelloWorldRequest& this_ = static_cast<const HelloWorldRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HelloWorldRequest::ByteSizeLong() const {
  const HelloWorldRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:helloworld.HelloWorldRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string message = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size +=
            1 + ::google::protobuf::internal::WireFormatLite::StringSize(this_._internal_message());
      }
    }
    // int64 increment = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_increment() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this_._internal_increment());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size, &this_._impl_._cached_size_);
}

void HelloWorldRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                                  const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HelloWorldRequest*>(&to_msg);
  auto& from = static_cast<const HelloWorldRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:helloworld.HelloWorldRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_increment() != 0) {
        _this->_impl_.increment_ = from._impl_.increment_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void HelloWorldRequest::CopyFrom(const HelloWorldRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:helloworld.HelloWorldRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloWorldRequest::InternalSwap(HelloWorldRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.increment_, other->_impl_.increment_);
}

::google::protobuf::Metadata HelloWorldRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HelloWorldResponse::_Internal {
 public:
  using HasBits = decltype(::std::declval<HelloWorldResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HelloWorldResponse, _impl_._has_bits_);
};

HelloWorldResponse::HelloWorldResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HelloWorldResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:helloworld.HelloWorldResponse)
}
PROTOBUF_NDEBUG_INLINE HelloWorldResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::helloworld::HelloWorldResponse& from_msg)
    : _has_bits_{from._has_bits_}, _cached_size_{0}, message_(arena, from.message_) {}

HelloWorldResponse::HelloWorldResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                                       const HelloWorldResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HelloWorldResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HelloWorldResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.current_count_ = from._impl_.current_count_;

  // @@protoc_insertion_point(copy_constructor:helloworld.HelloWorldResponse)
}
PROTOBUF_NDEBUG_INLINE HelloWorldResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : _cached_size_{0}, message_(arena) {}

inline void HelloWorldResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.current_count_ = {};
}
HelloWorldResponse::~HelloWorldResponse() {
  // @@protoc_insertion_point(destructor:helloworld.HelloWorldResponse)
  SharedDtor(*this);
}
inline void HelloWorldResponse::SharedDtor(MessageLite& self) {
  HelloWorldResponse& this_ = static_cast<HelloWorldResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL
HelloWorldResponse::PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                                  ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HelloWorldResponse(arena);
}
constexpr auto HelloWorldResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HelloWorldResponse),
                                                                alignof(HelloWorldResponse));
}
constexpr auto HelloWorldResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HelloWorldResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HelloWorldResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HelloWorldResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HelloWorldResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HelloWorldResponse>(),
          &HelloWorldResponse::ByteSizeLong,
          &HelloWorldResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HelloWorldResponse, _impl_._cached_size_),
          false,
      },
      &HelloWorldResponse::kDescriptorMethods, &descriptor_table_helloworld_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
    HelloWorldResponse_class_data_ = HelloWorldResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HelloWorldResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HelloWorldResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HelloWorldResponse_class_data_.tc_table);
  return HelloWorldResponse_class_data_.base();
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::TcParseTable<1, 2, 0, 45, 2>
    HelloWorldResponse::_table_ = {
        {
            PROTOBUF_FIELD_OFFSET(HelloWorldResponse, _impl_._has_bits_),
            0,     // no _extensions_
            2, 8,  // max_field_number, fast_idx_mask
            offsetof(decltype(_table_), field_lookup_table),
            4294967292,  // skipmap
            offsetof(decltype(_table_), field_entries),
            2,                                         // num_field_entries
            0,                                         // num_aux_entries
            offsetof(decltype(_table_), field_names),  // no aux_entries
            HelloWorldResponse_class_data_.base(),
            nullptr,                            // post_loop_handler
            ::_pbi::TcParser::GenericFallback,  // fallback
#ifdef PROTOBUF_PREFETCH_PARSE_TABLE
            ::_pbi::TcParser::GetTable<::helloworld::HelloWorldResponse>(),  // to_prefetch
#endif  // PROTOBUF_PREFETCH_PARSE_TABLE
        },
        {{
            // string message = 2;
            {::_pbi::TcParser::FastUS1,
             {18, 0, 0, PROTOBUF_FIELD_OFFSET(HelloWorldResponse, _impl_.message_)}},
            // int64 current_count = 1;
            {::_pbi::TcParser::SingularVarintNoZag1<
                 ::uint64_t, offsetof(HelloWorldResponse, _impl_.current_count_), 1>(),
             {8, 1, 0, PROTOBUF_FIELD_OFFSET(HelloWorldResponse, _impl_.current_count_)}},
        }},
        {{65535, 65535}},
        {{
            // int64 current_count = 1;
            {PROTOBUF_FIELD_OFFSET(HelloWorldResponse, _impl_.current_count_),
             _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
            // string message = 2;
            {PROTOBUF_FIELD_OFFSET(HelloWorldResponse, _impl_.message_),
             _Internal::kHasBitsOffset + 0, 0,
             (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
        }},
        // no aux_entries
        {{"\35\0\7\0\0\0\0\0"
          "helloworld.HelloWorldResponse"
          "message"}},
    };
PROTOBUF_NOINLINE void HelloWorldResponse::Clear() {
  // @@protoc_insertion_point(message_clear_start:helloworld.HelloWorldResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  _impl_.current_count_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HelloWorldResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HelloWorldResponse& this_ = static_cast<const HelloWorldResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HelloWorldResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HelloWorldResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.HelloWorldResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 current_count = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_current_count() != 0) {
      target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
          stream, this_._internal_current_count(), target);
    }
  }

  // string message = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "helloworld.HelloWorldResponse.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance),
        target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:helloworld.HelloWorldResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HelloWorldResponse::ByteSizeLong(const MessageLite& base) {
  const HelloWorldResponse& this_ = static_cast<const HelloWorldResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HelloWorldResponse::ByteSizeLong() const {
  const HelloWorldResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:helloworld.HelloWorldResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string message = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_message().empty()) {
        total_size +=
            1 + ::google::protobuf::internal::WireFormatLite::StringSize(this_._internal_message());
      }
    }
    // int64 current_count = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_current_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this_._internal_current_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size, &this_._impl_._cached_size_);
}

void HelloWorldResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                                   const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HelloWorldResponse*>(&to_msg);
  auto& from = static_cast<const HelloWorldResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:helloworld.HelloWorldResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_current_count() != 0) {
        _this->_impl_.current_count_ = from._impl_.current_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void HelloWorldResponse::CopyFrom(const HelloWorldResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:helloworld.HelloWorldResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloWorldResponse::InternalSwap(
    HelloWorldResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.current_count_, other->_impl_.current_count_);
}

::google::protobuf::Metadata HelloWorldResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace helloworld
namespace google {
namespace protobuf {}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type _static_init2_ [[maybe_unused]] =
    (::_pbi::AddDescriptors(&descriptor_table_helloworld_2eproto), ::std::false_type{});
#include "google/protobuf/port_undef.inc"
