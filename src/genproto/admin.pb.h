// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: admin.proto
// Protobuf C++ Version: 6.31.0

#ifndef admin_2eproto_2epb_2eh
#define admin_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_admin_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_admin_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_admin_2eproto;
}  // extern "C"
namespace admin {
enum AdminStatus : int;
extern const uint32_t AdminStatus_internal_data_[];
class Account;
struct AccountDefaultTypeInternal;
extern AccountDefaultTypeInternal _Account_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Account_class_data_;
class AccountRequest;
struct AccountRequestDefaultTypeInternal;
extern AccountRequestDefaultTypeInternal _AccountRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull
    AccountRequest_class_data_;
class AdminResponse;
struct AdminResponseDefaultTypeInternal;
extern AdminResponseDefaultTypeInternal _AdminResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull
    AdminResponse_class_data_;
}  // namespace admin
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::admin::AdminStatus_internal_data_>
    internal::EnumTraitsImpl::value<::admin::AdminStatus>;
}  // namespace protobuf
}  // namespace google

namespace admin {
enum AdminStatus : int {
  ADMIN_STATUS_UNSPECIFIED = 0,
  ADMIN_STATUS_OK = 1,
  ADMIN_STATUS_ERR = 2,
  AdminStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  AdminStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t AdminStatus_internal_data_[];
inline constexpr AdminStatus AdminStatus_MIN = static_cast<AdminStatus>(0);
inline constexpr AdminStatus AdminStatus_MAX = static_cast<AdminStatus>(2);
inline bool AdminStatus_IsValid(int value) { return 0 <= value && value <= 2; }
inline constexpr int AdminStatus_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL
AdminStatus_descriptor();
template <typename T>
const ::std::string& AdminStatus_Name(T value) {
  static_assert(
      ::std::is_same<T, AdminStatus>::value || ::std::is_integral<T>::value,
      "Incorrect type passed to AdminStatus_Name().");
  return AdminStatus_Name(static_cast<AdminStatus>(value));
}
template <>
inline const ::std::string& AdminStatus_Name(AdminStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AdminStatus_descriptor,
                                                       0, 2>(
      static_cast<int>(value));
}
inline bool AdminStatus_Parse(::absl::string_view name,
                              AdminStatus* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdminStatus>(
      AdminStatus_descriptor(), name, value);
}

// ===================================================================

// -------------------------------------------------------------------

class AdminResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:admin.AdminResponse) */ {
 public:
  inline AdminResponse() : AdminResponse(nullptr) {}
  ~AdminResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AdminResponse* PROTOBUF_NONNULL msg,
                       std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AdminResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AdminResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AdminResponse(const AdminResponse& from)
      : AdminResponse(nullptr, from) {}
  inline AdminResponse(AdminResponse&& from) noexcept
      : AdminResponse(nullptr, ::std::move(from)) {}
  inline AdminResponse& operator=(const AdminResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AdminResponse& operator=(AdminResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(
            GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL
  GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL
  GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AdminResponse& default_instance() {
    return *reinterpret_cast<const AdminResponse*>(
        &_AdminResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AdminResponse& a, AdminResponse& b) { a.Swap(&b); }
  inline void Swap(AdminResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(),
                                                         other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AdminResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AdminResponse* PROTOBUF_NONNULL
  New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AdminResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AdminResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AdminResponse& from) {
    AdminResponse::MergeImpl(*this, from);
  }

 private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

 public:
  bool IsInitialized() const { return true; }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
 private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg,
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

 public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

 private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AdminResponse* PROTOBUF_NONNULL other);

 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "admin.AdminResponse"; }

 protected:
  explicit AdminResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AdminResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                const AdminResponse& from);
  AdminResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                AdminResponse&& from) noexcept
      : AdminResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
  GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL
  PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

 private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

 public:
  // optional .admin.AdminStatus status = 1;
  bool has_status() const;
  void clear_status();
  ::admin::AdminStatus status() const;
  void set_status(::admin::AdminStatus value);

 private:
  ::admin::AdminStatus _internal_status() const;
  void _internal_set_status(::admin::AdminStatus value);

 public:
  // @@protoc_insertion_point(class_scope:admin.AdminResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 35, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AdminResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_admin_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull
    AdminResponse_class_data_;
// -------------------------------------------------------------------

class AccountRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:admin.AccountRequest) */ {
 public:
  inline AccountRequest() : AccountRequest(nullptr) {}
  ~AccountRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AccountRequest* PROTOBUF_NONNULL msg,
                       std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AccountRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AccountRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AccountRequest(const AccountRequest& from)
      : AccountRequest(nullptr, from) {}
  inline AccountRequest(AccountRequest&& from) noexcept
      : AccountRequest(nullptr, ::std::move(from)) {}
  inline AccountRequest& operator=(const AccountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountRequest& operator=(AccountRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(
            GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL
  GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL
  GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AccountRequest& default_instance() {
    return *reinterpret_cast<const AccountRequest*>(
        &_AccountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AccountRequest& a, AccountRequest& b) { a.Swap(&b); }
  inline void Swap(AccountRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(),
                                                         other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AccountRequest* PROTOBUF_NONNULL
  New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AccountRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AccountRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AccountRequest& from) {
    AccountRequest::MergeImpl(*this, from);
  }

 private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

 public:
  bool IsInitialized() const { return true; }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
 private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg,
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

 public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

 private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AccountRequest* PROTOBUF_NONNULL other);

 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "admin.AccountRequest";
  }

 protected:
  explicit AccountRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AccountRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                 const AccountRequest& from);
  AccountRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                 AccountRequest&& from) noexcept
      : AccountRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
  GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL
  PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // optional int64 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  ::int64_t account_id() const;
  void set_account_id(::int64_t value);

 private:
  ::int64_t _internal_account_id() const;
  void _internal_set_account_id(::int64_t value);

 public:
  // @@protoc_insertion_point(class_scope:admin.AccountRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AccountRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t account_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_admin_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull
    AccountRequest_class_data_;
// -------------------------------------------------------------------

class Account final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:admin.Account) */ {
 public:
  inline Account() : Account(nullptr) {}
  ~Account() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Account* PROTOBUF_NONNULL msg,
                       std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Account));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Account(
      ::google::protobuf::internal::ConstantInitialized);

  inline Account(const Account& from) : Account(nullptr, from) {}
  inline Account(Account&& from) noexcept
      : Account(nullptr, ::std::move(from)) {}
  inline Account& operator=(const Account& from) {
    CopyFrom(from);
    return *this;
  }
  inline Account& operator=(Account&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(
            GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL
  GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL
  GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Account& default_instance() {
    return *reinterpret_cast<const Account*>(&_Account_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Account& a, Account& b) { a.Swap(&b); }
  inline void Swap(Account* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(),
                                                         other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Account* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Account* PROTOBUF_NONNULL
  New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Account>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Account& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Account& from) { Account::MergeImpl(*this, from); }

 private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

 public:
  bool IsInitialized() const { return true; }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
 private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg,
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

 public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

 private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Account* PROTOBUF_NONNULL other);

 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "admin.Account"; }

 protected:
  explicit Account(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Account(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
          const Account& from);
  Account(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
          Account&& from) noexcept
      : Account(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
  GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL
  PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFirstNameFieldNumber = 2,
    kLastNameFieldNumber = 3,
    kPhoneNumberFieldNumber = 4,
    kPasswordFieldNumber = 5,
    kAccountIdFieldNumber = 1,
  };
  // optional string first_name = 2;
  bool has_first_name() const;
  void clear_first_name();
  const ::std::string& first_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_first_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_first_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_first_name();
  void set_allocated_first_name(::std::string* PROTOBUF_NULLABLE value);

 private:
  const ::std::string& _internal_first_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_first_name(
      const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_first_name();

 public:
  // optional string last_name = 3;
  bool has_last_name() const;
  void clear_last_name();
  const ::std::string& last_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_last_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_last_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_last_name();
  void set_allocated_last_name(::std::string* PROTOBUF_NULLABLE value);

 private:
  const ::std::string& _internal_last_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_last_name(
      const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_last_name();

 public:
  // optional string phone_number = 4;
  bool has_phone_number() const;
  void clear_phone_number();
  const ::std::string& phone_number() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_phone_number(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_phone_number();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_phone_number();
  void set_allocated_phone_number(::std::string* PROTOBUF_NULLABLE value);

 private:
  const ::std::string& _internal_phone_number() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_phone_number(
      const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_phone_number();

 public:
  // optional string password = 5;
  bool has_password() const;
  void clear_password();
  const ::std::string& password() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_password();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_password();
  void set_allocated_password(::std::string* PROTOBUF_NULLABLE value);

 private:
  const ::std::string& _internal_password() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_password();

 public:
  // optional int64 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  ::int64_t account_id() const;
  void set_account_id(::int64_t value);

 private:
  ::int64_t _internal_account_id() const;
  void _internal_set_account_id(::int64_t value);

 public:
  // @@protoc_insertion_point(class_scope:admin.Account)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Account& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr first_name_;
    ::google::protobuf::internal::ArenaStringPtr last_name_;
    ::google::protobuf::internal::ArenaStringPtr phone_number_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::int64_t account_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_admin_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Account_class_data_;

// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Account

// optional int64 account_id = 1;
inline bool Account::has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Account::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t Account::account_id() const {
  // @@protoc_insertion_point(field_get:admin.Account.account_id)
  return _internal_account_id();
}
inline void Account::set_account_id(::int64_t value) {
  _internal_set_account_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:admin.Account.account_id)
}
inline ::int64_t Account::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_;
}
inline void Account::_internal_set_account_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_ = value;
}

// optional string first_name = 2;
inline bool Account::has_first_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Account::clear_first_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Account::first_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:admin.Account.first_name)
  return _internal_first_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Account::set_first_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.first_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:admin.Account.first_name)
}
inline ::std::string* PROTOBUF_NONNULL Account::mutable_first_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_first_name();
  // @@protoc_insertion_point(field_mutable:admin.Account.first_name)
  return _s;
}
inline const ::std::string& Account::_internal_first_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.first_name_.Get();
}
inline void Account::_internal_set_first_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.first_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Account::_internal_mutable_first_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.first_name_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Account::release_first_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:admin.Account.first_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.first_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.first_name_.Set("", GetArena());
  }
  return released;
}
inline void Account::set_allocated_first_name(
    ::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.first_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() &&
      _impl_.first_name_.IsDefault()) {
    _impl_.first_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:admin.Account.first_name)
}

// optional string last_name = 3;
inline bool Account::has_last_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Account::clear_last_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Account::last_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:admin.Account.last_name)
  return _internal_last_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Account::set_last_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.last_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:admin.Account.last_name)
}
inline ::std::string* PROTOBUF_NONNULL Account::mutable_last_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_last_name();
  // @@protoc_insertion_point(field_mutable:admin.Account.last_name)
  return _s;
}
inline const ::std::string& Account::_internal_last_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_name_.Get();
}
inline void Account::_internal_set_last_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.last_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Account::_internal_mutable_last_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.last_name_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Account::release_last_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:admin.Account.last_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.last_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.last_name_.Set("", GetArena());
  }
  return released;
}
inline void Account::set_allocated_last_name(
    ::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.last_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() &&
      _impl_.last_name_.IsDefault()) {
    _impl_.last_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:admin.Account.last_name)
}

// optional string phone_number = 4;
inline bool Account::has_phone_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Account::clear_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_number_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& Account::phone_number() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:admin.Account.phone_number)
  return _internal_phone_number();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Account::set_phone_number(Arg_&& arg,
                                                      Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.phone_number_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:admin.Account.phone_number)
}
inline ::std::string* PROTOBUF_NONNULL Account::mutable_phone_number()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_phone_number();
  // @@protoc_insertion_point(field_mutable:admin.Account.phone_number)
  return _s;
}
inline const ::std::string& Account::_internal_phone_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phone_number_.Get();
}
inline void Account::_internal_set_phone_number(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.phone_number_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL
Account::_internal_mutable_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.phone_number_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Account::release_phone_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:admin.Account.phone_number)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.phone_number_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.phone_number_.Set("", GetArena());
  }
  return released;
}
inline void Account::set_allocated_phone_number(
    ::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.phone_number_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() &&
      _impl_.phone_number_.IsDefault()) {
    _impl_.phone_number_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:admin.Account.phone_number)
}

// optional string password = 5;
inline bool Account::has_password() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Account::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& Account::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:admin.Account.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Account::set_password(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:admin.Account.password)
}
inline ::std::string* PROTOBUF_NONNULL Account::mutable_password()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:admin.Account.password)
  return _s;
}
inline const ::std::string& Account::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void Account::_internal_set_password(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.password_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Account::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.password_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Account::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:admin.Account.password)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.password_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.password_.Set("", GetArena());
  }
  return released;
}
inline void Account::set_allocated_password(
    ::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() &&
      _impl_.password_.IsDefault()) {
    _impl_.password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:admin.Account.password)
}

// -------------------------------------------------------------------

// AccountRequest

// optional int64 account_id = 1;
inline bool AccountRequest::has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AccountRequest::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t AccountRequest::account_id() const {
  // @@protoc_insertion_point(field_get:admin.AccountRequest.account_id)
  return _internal_account_id();
}
inline void AccountRequest::set_account_id(::int64_t value) {
  _internal_set_account_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:admin.AccountRequest.account_id)
}
inline ::int64_t AccountRequest::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_;
}
inline void AccountRequest::_internal_set_account_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_ = value;
}

// -------------------------------------------------------------------

// AdminResponse

// optional .admin.AdminStatus status = 1;
inline bool AdminResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void AdminResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::admin::AdminStatus AdminResponse::status() const {
  // @@protoc_insertion_point(field_get:admin.AdminResponse.status)
  return _internal_status();
}
inline void AdminResponse::set_status(::admin::AdminStatus value) {
  _internal_set_status(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:admin.AdminResponse.status)
}
inline ::admin::AdminStatus AdminResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::admin::AdminStatus>(_impl_.status_);
}
inline void AdminResponse::_internal_set_status(::admin::AdminStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// optional string message = 2;
inline bool AdminResponse::has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AdminResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& AdminResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:admin.AdminResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void AdminResponse::set_message(Arg_&& arg,
                                                       Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:admin.AdminResponse.message)
}
inline ::std::string* PROTOBUF_NONNULL AdminResponse::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:admin.AdminResponse.message)
  return _s;
}
inline const ::std::string& AdminResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void AdminResponse::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL
AdminResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE AdminResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:admin.AdminResponse.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void AdminResponse::set_allocated_message(
    ::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() &&
      _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:admin.AdminResponse.message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace admin

namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::admin::AdminStatus> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL
GetEnumDescriptor<::admin::AdminStatus>() {
  return ::admin::AdminStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // admin_2eproto_2epb_2eh
