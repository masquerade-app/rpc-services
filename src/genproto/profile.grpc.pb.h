// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: profile.proto
// Original file comments:
// Copyright Â© 2025 William Huffman
//
// The profile service defines functionality for user profile cards.
//
#ifndef GRPC_profile_2eproto__INCLUDED
#define GRPC_profile_2eproto__INCLUDED

#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/server_context.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

#include <functional>
#include <grpcpp/ports_def.inc>

#include "profile.pb.h"

namespace profile {

class Profile final {
 public:
  static constexpr char const* service_full_name() { return "profile.Profile"; }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateProfile(::grpc::ClientContext* context,
                                         const ::profile::ProfileCard& request,
                                         ::profile::ProfileResponse* response) = 0;
    std::unique_ptr<::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>>
    AsyncCreateProfile(::grpc::ClientContext* context, const ::profile::ProfileCard& request,
                       ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<
          ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>>(
          AsyncCreateProfileRaw(context, request, cq));
    }
    std::unique_ptr<::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>>
    PrepareAsyncCreateProfile(::grpc::ClientContext* context, const ::profile::ProfileCard& request,
                              ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<
          ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>>(
          PrepareAsyncCreateProfileRaw(context, request, cq));
    }
    virtual ::grpc::Status GetProfile(::grpc::ClientContext* context,
                                      const ::profile::ProfileRequest& request,
                                      ::profile::ProfileCard* response) = 0;
    std::unique_ptr<::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileCard>>
    AsyncGetProfile(::grpc::ClientContext* context, const ::profile::ProfileRequest& request,
                    ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileCard>>(
          AsyncGetProfileRaw(context, request, cq));
    }
    std::unique_ptr<::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileCard>>
    PrepareAsyncGetProfile(::grpc::ClientContext* context, const ::profile::ProfileRequest& request,
                           ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileCard>>(
          PrepareAsyncGetProfileRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateProfile(::grpc::ClientContext* context,
                                         const ::profile::ProfileCard& request,
                                         ::profile::ProfileResponse* response) = 0;
    std::unique_ptr<::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>>
    AsyncUpdateProfile(::grpc::ClientContext* context, const ::profile::ProfileCard& request,
                       ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<
          ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>>(
          AsyncUpdateProfileRaw(context, request, cq));
    }
    std::unique_ptr<::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>>
    PrepareAsyncUpdateProfile(::grpc::ClientContext* context, const ::profile::ProfileCard& request,
                              ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<
          ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>>(
          PrepareAsyncUpdateProfileRaw(context, request, cq));
    }
    virtual ::grpc::Status ClearProfile(::grpc::ClientContext* context,
                                        const ::profile::ProfileRequest& request,
                                        ::profile::ProfileResponse* response) = 0;
    std::unique_ptr<::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>>
    AsyncClearProfile(::grpc::ClientContext* context, const ::profile::ProfileRequest& request,
                      ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<
          ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>>(
          AsyncClearProfileRaw(context, request, cq));
    }
    std::unique_ptr<::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>>
    PrepareAsyncClearProfile(::grpc::ClientContext* context,
                             const ::profile::ProfileRequest& request,
                             ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<
          ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>>(
          PrepareAsyncClearProfileRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateProfile(::grpc::ClientContext* context,
                                 const ::profile::ProfileCard* request,
                                 ::profile::ProfileResponse* response,
                                 std::function<void(::grpc::Status)>) = 0;
      virtual void CreateProfile(::grpc::ClientContext* context,
                                 const ::profile::ProfileCard* request,
                                 ::profile::ProfileResponse* response,
                                 ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetProfile(::grpc::ClientContext* context,
                              const ::profile::ProfileRequest* request,
                              ::profile::ProfileCard* response,
                              std::function<void(::grpc::Status)>) = 0;
      virtual void GetProfile(::grpc::ClientContext* context,
                              const ::profile::ProfileRequest* request,
                              ::profile::ProfileCard* response,
                              ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateProfile(::grpc::ClientContext* context,
                                 const ::profile::ProfileCard* request,
                                 ::profile::ProfileResponse* response,
                                 std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateProfile(::grpc::ClientContext* context,
                                 const ::profile::ProfileCard* request,
                                 ::profile::ProfileResponse* response,
                                 ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ClearProfile(::grpc::ClientContext* context,
                                const ::profile::ProfileRequest* request,
                                ::profile::ProfileResponse* response,
                                std::function<void(::grpc::Status)>) = 0;
      virtual void ClearProfile(::grpc::ClientContext* context,
                                const ::profile::ProfileRequest* request,
                                ::profile::ProfileResponse* response,
                                ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }

   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>*
    AsyncCreateProfileRaw(::grpc::ClientContext* context, const ::profile::ProfileCard& request,
                          ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>*
    PrepareAsyncCreateProfileRaw(::grpc::ClientContext* context,
                                 const ::profile::ProfileCard& request,
                                 ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileCard>* AsyncGetProfileRaw(
        ::grpc::ClientContext* context, const ::profile::ProfileRequest& request,
        ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileCard>*
    PrepareAsyncGetProfileRaw(::grpc::ClientContext* context,
                              const ::profile::ProfileRequest& request,
                              ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>*
    AsyncUpdateProfileRaw(::grpc::ClientContext* context, const ::profile::ProfileCard& request,
                          ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>*
    PrepareAsyncUpdateProfileRaw(::grpc::ClientContext* context,
                                 const ::profile::ProfileCard& request,
                                 ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>*
    AsyncClearProfileRaw(::grpc::ClientContext* context, const ::profile::ProfileRequest& request,
                         ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface<::profile::ProfileResponse>*
    PrepareAsyncClearProfileRaw(::grpc::ClientContext* context,
                                const ::profile::ProfileRequest& request,
                                ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr<::grpc::ChannelInterface>& channel,
         const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateProfile(::grpc::ClientContext* context,
                                 const ::profile::ProfileCard& request,
                                 ::profile::ProfileResponse* response) override;
    std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>>
    AsyncCreateProfile(::grpc::ClientContext* context, const ::profile::ProfileCard& request,
                       ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>>(
          AsyncCreateProfileRaw(context, request, cq));
    }
    std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>>
    PrepareAsyncCreateProfile(::grpc::ClientContext* context, const ::profile::ProfileCard& request,
                              ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>>(
          PrepareAsyncCreateProfileRaw(context, request, cq));
    }
    ::grpc::Status GetProfile(::grpc::ClientContext* context,
                              const ::profile::ProfileRequest& request,
                              ::profile::ProfileCard* response) override;
    std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileCard>> AsyncGetProfile(
        ::grpc::ClientContext* context, const ::profile::ProfileRequest& request,
        ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileCard>>(
          AsyncGetProfileRaw(context, request, cq));
    }
    std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileCard>>
    PrepareAsyncGetProfile(::grpc::ClientContext* context, const ::profile::ProfileRequest& request,
                           ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileCard>>(
          PrepareAsyncGetProfileRaw(context, request, cq));
    }
    ::grpc::Status UpdateProfile(::grpc::ClientContext* context,
                                 const ::profile::ProfileCard& request,
                                 ::profile::ProfileResponse* response) override;
    std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>>
    AsyncUpdateProfile(::grpc::ClientContext* context, const ::profile::ProfileCard& request,
                       ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>>(
          AsyncUpdateProfileRaw(context, request, cq));
    }
    std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>>
    PrepareAsyncUpdateProfile(::grpc::ClientContext* context, const ::profile::ProfileCard& request,
                              ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>>(
          PrepareAsyncUpdateProfileRaw(context, request, cq));
    }
    ::grpc::Status ClearProfile(::grpc::ClientContext* context,
                                const ::profile::ProfileRequest& request,
                                ::profile::ProfileResponse* response) override;
    std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>>
    AsyncClearProfile(::grpc::ClientContext* context, const ::profile::ProfileRequest& request,
                      ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>>(
          AsyncClearProfileRaw(context, request, cq));
    }
    std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>>
    PrepareAsyncClearProfile(::grpc::ClientContext* context,
                             const ::profile::ProfileRequest& request,
                             ::grpc::CompletionQueue* cq) {
      return std::unique_ptr<::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>>(
          PrepareAsyncClearProfileRaw(context, request, cq));
    }
    class async final : public StubInterface::async_interface {
     public:
      void CreateProfile(::grpc::ClientContext* context, const ::profile::ProfileCard* request,
                         ::profile::ProfileResponse* response,
                         std::function<void(::grpc::Status)>) override;
      void CreateProfile(::grpc::ClientContext* context, const ::profile::ProfileCard* request,
                         ::profile::ProfileResponse* response,
                         ::grpc::ClientUnaryReactor* reactor) override;
      void GetProfile(::grpc::ClientContext* context, const ::profile::ProfileRequest* request,
                      ::profile::ProfileCard* response,
                      std::function<void(::grpc::Status)>) override;
      void GetProfile(::grpc::ClientContext* context, const ::profile::ProfileRequest* request,
                      ::profile::ProfileCard* response,
                      ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateProfile(::grpc::ClientContext* context, const ::profile::ProfileCard* request,
                         ::profile::ProfileResponse* response,
                         std::function<void(::grpc::Status)>) override;
      void UpdateProfile(::grpc::ClientContext* context, const ::profile::ProfileCard* request,
                         ::profile::ProfileResponse* response,
                         ::grpc::ClientUnaryReactor* reactor) override;
      void ClearProfile(::grpc::ClientContext* context, const ::profile::ProfileRequest* request,
                        ::profile::ProfileResponse* response,
                        std::function<void(::grpc::Status)>) override;
      void ClearProfile(::grpc::ClientContext* context, const ::profile::ProfileRequest* request,
                        ::profile::ProfileResponse* response,
                        ::grpc::ClientUnaryReactor* reactor) override;

     private:
      friend class Stub;
      explicit async(Stub* stub) : stub_(stub) {}
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr<::grpc::ChannelInterface> channel_;
    class async async_stub_ {
      this
    };
    ::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>* AsyncCreateProfileRaw(
        ::grpc::ClientContext* context, const ::profile::ProfileCard& request,
        ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>* PrepareAsyncCreateProfileRaw(
        ::grpc::ClientContext* context, const ::profile::ProfileCard& request,
        ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader<::profile::ProfileCard>* AsyncGetProfileRaw(
        ::grpc::ClientContext* context, const ::profile::ProfileRequest& request,
        ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader<::profile::ProfileCard>* PrepareAsyncGetProfileRaw(
        ::grpc::ClientContext* context, const ::profile::ProfileRequest& request,
        ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>* AsyncUpdateProfileRaw(
        ::grpc::ClientContext* context, const ::profile::ProfileCard& request,
        ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>* PrepareAsyncUpdateProfileRaw(
        ::grpc::ClientContext* context, const ::profile::ProfileCard& request,
        ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>* AsyncClearProfileRaw(
        ::grpc::ClientContext* context, const ::profile::ProfileRequest& request,
        ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader<::profile::ProfileResponse>* PrepareAsyncClearProfileRaw(
        ::grpc::ClientContext* context, const ::profile::ProfileRequest& request,
        ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_GetProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_ClearProfile_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr<::grpc::ChannelInterface>& channel,
                                       const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateProfile(::grpc::ServerContext* context,
                                         const ::profile::ProfileCard* request,
                                         ::profile::ProfileResponse* response);
    virtual ::grpc::Status GetProfile(::grpc::ServerContext* context,
                                      const ::profile::ProfileRequest* request,
                                      ::profile::ProfileCard* response);
    virtual ::grpc::Status UpdateProfile(::grpc::ServerContext* context,
                                         const ::profile::ProfileCard* request,
                                         ::profile::ProfileResponse* response);
    virtual ::grpc::Status ClearProfile(::grpc::ServerContext* context,
                                        const ::profile::ProfileRequest* request,
                                        ::profile::ProfileResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithAsyncMethod_CreateProfile() { ::grpc::Service::MarkMethodAsync(0); }
    ~WithAsyncMethod_CreateProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status CreateProfile(::grpc::ServerContext* /*context*/,
                                 const ::profile::ProfileCard* /*request*/,
                                 ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProfile(
        ::grpc::ServerContext* context, ::profile::ProfileCard* request,
        ::grpc::ServerAsyncResponseWriter<::profile::ProfileResponse>* response,
        ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq,
        void* tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq,
                                         notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithAsyncMethod_GetProfile() { ::grpc::Service::MarkMethodAsync(1); }
    ~WithAsyncMethod_GetProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status GetProfile(::grpc::ServerContext* /*context*/,
                              const ::profile::ProfileRequest* /*request*/,
                              ::profile::ProfileCard* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProfile(::grpc::ServerContext* context, ::profile::ProfileRequest* request,
                           ::grpc::ServerAsyncResponseWriter<::profile::ProfileCard>* response,
                           ::grpc::CompletionQueue* new_call_cq,
                           ::grpc::ServerCompletionQueue* notification_cq, void* tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq,
                                         notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithAsyncMethod_UpdateProfile() { ::grpc::Service::MarkMethodAsync(2); }
    ~WithAsyncMethod_UpdateProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status UpdateProfile(::grpc::ServerContext* /*context*/,
                                 const ::profile::ProfileCard* /*request*/,
                                 ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProfile(
        ::grpc::ServerContext* context, ::profile::ProfileCard* request,
        ::grpc::ServerAsyncResponseWriter<::profile::ProfileResponse>* response,
        ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq,
        void* tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq,
                                         notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ClearProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithAsyncMethod_ClearProfile() { ::grpc::Service::MarkMethodAsync(3); }
    ~WithAsyncMethod_ClearProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status ClearProfile(::grpc::ServerContext* /*context*/,
                                const ::profile::ProfileRequest* /*request*/,
                                ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearProfile(
        ::grpc::ServerContext* context, ::profile::ProfileRequest* request,
        ::grpc::ServerAsyncResponseWriter<::profile::ProfileResponse>* response,
        ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq,
        void* tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq,
                                         notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateProfile<WithAsyncMethod_GetProfile<
      WithAsyncMethod_UpdateProfile<WithAsyncMethod_ClearProfile<Service>>>>
      AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithCallbackMethod_CreateProfile() {
      ::grpc::Service::MarkMethodCallback(
          0,
          new ::grpc::internal::CallbackUnaryHandler<::profile::ProfileCard,
                                                     ::profile::ProfileResponse>(
              [this](::grpc::CallbackServerContext* context, const ::profile::ProfileCard* request,
                     ::profile::ProfileResponse* response) {
                return this->CreateProfile(context, request, response);
              }));
    }
    void SetMessageAllocatorFor_CreateProfile(
        ::grpc::MessageAllocator<::profile::ProfileCard, ::profile::ProfileResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler<::profile::ProfileCard,
                                                         ::profile::ProfileResponse>*>(handler)
          ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status CreateProfile(::grpc::ServerContext* /*context*/,
                                 const ::profile::ProfileCard* /*request*/,
                                 ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateProfile(::grpc::CallbackServerContext* /*context*/,
                                                      const ::profile::ProfileCard* /*request*/,
                                                      ::profile::ProfileResponse* /*response*/) {
      return nullptr;
    }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithCallbackMethod_GetProfile() {
      ::grpc::Service::MarkMethodCallback(
          1,
          new ::grpc::internal::CallbackUnaryHandler<::profile::ProfileRequest,
                                                     ::profile::ProfileCard>(
              [this](::grpc::CallbackServerContext* context,
                     const ::profile::ProfileRequest* request, ::profile::ProfileCard* response) {
                return this->GetProfile(context, request, response);
              }));
    }
    void SetMessageAllocatorFor_GetProfile(
        ::grpc::MessageAllocator<::profile::ProfileRequest, ::profile::ProfileCard>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler<::profile::ProfileRequest,
                                                         ::profile::ProfileCard>*>(handler)
          ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status GetProfile(::grpc::ServerContext* /*context*/,
                              const ::profile::ProfileRequest* /*request*/,
                              ::profile::ProfileCard* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProfile(::grpc::CallbackServerContext* /*context*/,
                                                   const ::profile::ProfileRequest* /*request*/,
                                                   ::profile::ProfileCard* /*response*/) {
      return nullptr;
    }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithCallbackMethod_UpdateProfile() {
      ::grpc::Service::MarkMethodCallback(
          2,
          new ::grpc::internal::CallbackUnaryHandler<::profile::ProfileCard,
                                                     ::profile::ProfileResponse>(
              [this](::grpc::CallbackServerContext* context, const ::profile::ProfileCard* request,
                     ::profile::ProfileResponse* response) {
                return this->UpdateProfile(context, request, response);
              }));
    }
    void SetMessageAllocatorFor_UpdateProfile(
        ::grpc::MessageAllocator<::profile::ProfileCard, ::profile::ProfileResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler<::profile::ProfileCard,
                                                         ::profile::ProfileResponse>*>(handler)
          ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status UpdateProfile(::grpc::ServerContext* /*context*/,
                                 const ::profile::ProfileCard* /*request*/,
                                 ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateProfile(::grpc::CallbackServerContext* /*context*/,
                                                      const ::profile::ProfileCard* /*request*/,
                                                      ::profile::ProfileResponse* /*response*/) {
      return nullptr;
    }
  };
  template <class BaseClass>
  class WithCallbackMethod_ClearProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithCallbackMethod_ClearProfile() {
      ::grpc::Service::MarkMethodCallback(
          3, new ::grpc::internal::CallbackUnaryHandler<::profile::ProfileRequest,
                                                        ::profile::ProfileResponse>(
                 [this](::grpc::CallbackServerContext* context,
                        const ::profile::ProfileRequest* request,
                        ::profile::ProfileResponse* response) {
                   return this->ClearProfile(context, request, response);
                 }));
    }
    void SetMessageAllocatorFor_ClearProfile(
        ::grpc::MessageAllocator<::profile::ProfileRequest, ::profile::ProfileResponse>*
            allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler<::profile::ProfileRequest,
                                                         ::profile::ProfileResponse>*>(handler)
          ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ClearProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status ClearProfile(::grpc::ServerContext* /*context*/,
                                const ::profile::ProfileRequest* /*request*/,
                                ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearProfile(::grpc::CallbackServerContext* /*context*/,
                                                     const ::profile::ProfileRequest* /*request*/,
                                                     ::profile::ProfileResponse* /*response*/) {
      return nullptr;
    }
  };
  typedef WithCallbackMethod_CreateProfile<WithCallbackMethod_GetProfile<
      WithCallbackMethod_UpdateProfile<WithCallbackMethod_ClearProfile<Service>>>>
      CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithGenericMethod_CreateProfile() { ::grpc::Service::MarkMethodGeneric(0); }
    ~WithGenericMethod_CreateProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status CreateProfile(::grpc::ServerContext* /*context*/,
                                 const ::profile::ProfileCard* /*request*/,
                                 ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithGenericMethod_GetProfile() { ::grpc::Service::MarkMethodGeneric(1); }
    ~WithGenericMethod_GetProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status GetProfile(::grpc::ServerContext* /*context*/,
                              const ::profile::ProfileRequest* /*request*/,
                              ::profile::ProfileCard* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithGenericMethod_UpdateProfile() { ::grpc::Service::MarkMethodGeneric(2); }
    ~WithGenericMethod_UpdateProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status UpdateProfile(::grpc::ServerContext* /*context*/,
                                 const ::profile::ProfileCard* /*request*/,
                                 ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ClearProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithGenericMethod_ClearProfile() { ::grpc::Service::MarkMethodGeneric(3); }
    ~WithGenericMethod_ClearProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status ClearProfile(::grpc::ServerContext* /*context*/,
                                const ::profile::ProfileRequest* /*request*/,
                                ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithRawMethod_CreateProfile() { ::grpc::Service::MarkMethodRaw(0); }
    ~WithRawMethod_CreateProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status CreateProfile(::grpc::ServerContext* /*context*/,
                                 const ::profile::ProfileCard* /*request*/,
                                 ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request,
                              ::grpc::ServerAsyncResponseWriter<::grpc::ByteBuffer>* response,
                              ::grpc::CompletionQueue* new_call_cq,
                              ::grpc::ServerCompletionQueue* notification_cq, void* tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq,
                                         notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithRawMethod_GetProfile() { ::grpc::Service::MarkMethodRaw(1); }
    ~WithRawMethod_GetProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status GetProfile(::grpc::ServerContext* /*context*/,
                              const ::profile::ProfileRequest* /*request*/,
                              ::profile::ProfileCard* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request,
                           ::grpc::ServerAsyncResponseWriter<::grpc::ByteBuffer>* response,
                           ::grpc::CompletionQueue* new_call_cq,
                           ::grpc::ServerCompletionQueue* notification_cq, void* tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq,
                                         notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithRawMethod_UpdateProfile() { ::grpc::Service::MarkMethodRaw(2); }
    ~WithRawMethod_UpdateProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status UpdateProfile(::grpc::ServerContext* /*context*/,
                                 const ::profile::ProfileCard* /*request*/,
                                 ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request,
                              ::grpc::ServerAsyncResponseWriter<::grpc::ByteBuffer>* response,
                              ::grpc::CompletionQueue* new_call_cq,
                              ::grpc::ServerCompletionQueue* notification_cq, void* tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq,
                                         notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ClearProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithRawMethod_ClearProfile() { ::grpc::Service::MarkMethodRaw(3); }
    ~WithRawMethod_ClearProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status ClearProfile(::grpc::ServerContext* /*context*/,
                                const ::profile::ProfileRequest* /*request*/,
                                ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request,
                             ::grpc::ServerAsyncResponseWriter<::grpc::ByteBuffer>* response,
                             ::grpc::CompletionQueue* new_call_cq,
                             ::grpc::ServerCompletionQueue* notification_cq, void* tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq,
                                         notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithRawCallbackMethod_CreateProfile() {
      ::grpc::Service::MarkMethodRawCallback(
          0, new ::grpc::internal::CallbackUnaryHandler<::grpc::ByteBuffer, ::grpc::ByteBuffer>(
                 [this](::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request,
                        ::grpc::ByteBuffer* response) {
                   return this->CreateProfile(context, request, response);
                 }));
    }
    ~WithRawCallbackMethod_CreateProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status CreateProfile(::grpc::ServerContext* /*context*/,
                                 const ::profile::ProfileCard* /*request*/,
                                 ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateProfile(::grpc::CallbackServerContext* /*context*/,
                                                      const ::grpc::ByteBuffer* /*request*/,
                                                      ::grpc::ByteBuffer* /*response*/) {
      return nullptr;
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithRawCallbackMethod_GetProfile() {
      ::grpc::Service::MarkMethodRawCallback(
          1, new ::grpc::internal::CallbackUnaryHandler<::grpc::ByteBuffer, ::grpc::ByteBuffer>(
                 [this](::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request,
                        ::grpc::ByteBuffer* response) {
                   return this->GetProfile(context, request, response);
                 }));
    }
    ~WithRawCallbackMethod_GetProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status GetProfile(::grpc::ServerContext* /*context*/,
                              const ::profile::ProfileRequest* /*request*/,
                              ::profile::ProfileCard* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetProfile(::grpc::CallbackServerContext* /*context*/,
                                                   const ::grpc::ByteBuffer* /*request*/,
                                                   ::grpc::ByteBuffer* /*response*/) {
      return nullptr;
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithRawCallbackMethod_UpdateProfile() {
      ::grpc::Service::MarkMethodRawCallback(
          2, new ::grpc::internal::CallbackUnaryHandler<::grpc::ByteBuffer, ::grpc::ByteBuffer>(
                 [this](::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request,
                        ::grpc::ByteBuffer* response) {
                   return this->UpdateProfile(context, request, response);
                 }));
    }
    ~WithRawCallbackMethod_UpdateProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status UpdateProfile(::grpc::ServerContext* /*context*/,
                                 const ::profile::ProfileCard* /*request*/,
                                 ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateProfile(::grpc::CallbackServerContext* /*context*/,
                                                      const ::grpc::ByteBuffer* /*request*/,
                                                      ::grpc::ByteBuffer* /*response*/) {
      return nullptr;
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ClearProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithRawCallbackMethod_ClearProfile() {
      ::grpc::Service::MarkMethodRawCallback(
          3, new ::grpc::internal::CallbackUnaryHandler<::grpc::ByteBuffer, ::grpc::ByteBuffer>(
                 [this](::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request,
                        ::grpc::ByteBuffer* response) {
                   return this->ClearProfile(context, request, response);
                 }));
    }
    ~WithRawCallbackMethod_ClearProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable synchronous version of this method
    ::grpc::Status ClearProfile(::grpc::ServerContext* /*context*/,
                                const ::profile::ProfileRequest* /*request*/,
                                ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearProfile(::grpc::CallbackServerContext* /*context*/,
                                                     const ::grpc::ByteBuffer* /*request*/,
                                                     ::grpc::ByteBuffer* /*response*/) {
      return nullptr;
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithStreamedUnaryMethod_CreateProfile() {
      ::grpc::Service::MarkMethodStreamed(
          0, new ::grpc::internal::StreamedUnaryHandler<::profile::ProfileCard,
                                                        ::profile::ProfileResponse>(
                 [this](::grpc::ServerContext* context,
                        ::grpc::ServerUnaryStreamer<::profile::ProfileCard,
                                                    ::profile::ProfileResponse>* streamer) {
                   return this->StreamedCreateProfile(context, streamer);
                 }));
    }
    ~WithStreamedUnaryMethod_CreateProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable regular version of this method
    ::grpc::Status CreateProfile(::grpc::ServerContext* /*context*/,
                                 const ::profile::ProfileCard* /*request*/,
                                 ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateProfile(
        ::grpc::ServerContext* context,
        ::grpc::ServerUnaryStreamer<::profile::ProfileCard, ::profile::ProfileResponse>*
            server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithStreamedUnaryMethod_GetProfile() {
      ::grpc::Service::MarkMethodStreamed(
          1,
          new ::grpc::internal::StreamedUnaryHandler<::profile::ProfileRequest,
                                                     ::profile::ProfileCard>(
              [this](::grpc::ServerContext* context,
                     ::grpc::ServerUnaryStreamer<::profile::ProfileRequest, ::profile::ProfileCard>*
                         streamer) { return this->StreamedGetProfile(context, streamer); }));
    }
    ~WithStreamedUnaryMethod_GetProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable regular version of this method
    ::grpc::Status GetProfile(::grpc::ServerContext* /*context*/,
                              const ::profile::ProfileRequest* /*request*/,
                              ::profile::ProfileCard* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetProfile(
        ::grpc::ServerContext* context,
        ::grpc::ServerUnaryStreamer<::profile::ProfileRequest, ::profile::ProfileCard>*
            server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithStreamedUnaryMethod_UpdateProfile() {
      ::grpc::Service::MarkMethodStreamed(
          2, new ::grpc::internal::StreamedUnaryHandler<::profile::ProfileCard,
                                                        ::profile::ProfileResponse>(
                 [this](::grpc::ServerContext* context,
                        ::grpc::ServerUnaryStreamer<::profile::ProfileCard,
                                                    ::profile::ProfileResponse>* streamer) {
                   return this->StreamedUpdateProfile(context, streamer);
                 }));
    }
    ~WithStreamedUnaryMethod_UpdateProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable regular version of this method
    ::grpc::Status UpdateProfile(::grpc::ServerContext* /*context*/,
                                 const ::profile::ProfileCard* /*request*/,
                                 ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateProfile(
        ::grpc::ServerContext* context,
        ::grpc::ServerUnaryStreamer<::profile::ProfileCard, ::profile::ProfileResponse>*
            server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClearProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}

   public:
    WithStreamedUnaryMethod_ClearProfile() {
      ::grpc::Service::MarkMethodStreamed(
          3, new ::grpc::internal::StreamedUnaryHandler<::profile::ProfileRequest,
                                                        ::profile::ProfileResponse>(
                 [this](::grpc::ServerContext* context,
                        ::grpc::ServerUnaryStreamer<::profile::ProfileRequest,
                                                    ::profile::ProfileResponse>* streamer) {
                   return this->StreamedClearProfile(context, streamer);
                 }));
    }
    ~WithStreamedUnaryMethod_ClearProfile() override { BaseClassMustBeDerivedFromService(this); }
    // disable regular version of this method
    ::grpc::Status ClearProfile(::grpc::ServerContext* /*context*/,
                                const ::profile::ProfileRequest* /*request*/,
                                ::profile::ProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClearProfile(
        ::grpc::ServerContext* context,
        ::grpc::ServerUnaryStreamer<::profile::ProfileRequest, ::profile::ProfileResponse>*
            server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateProfile<WithStreamedUnaryMethod_GetProfile<
      WithStreamedUnaryMethod_UpdateProfile<WithStreamedUnaryMethod_ClearProfile<Service>>>>
      StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateProfile<WithStreamedUnaryMethod_GetProfile<
      WithStreamedUnaryMethod_UpdateProfile<WithStreamedUnaryMethod_ClearProfile<Service>>>>
      StreamedService;
};

}  // namespace profile

#include <grpcpp/ports_undef.inc>
#endif  // GRPC_profile_2eproto__INCLUDED
