// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: helloworld.proto
// Protobuf C++ Version: 6.31.0

#ifndef helloworld_2eproto_2epb_2eh
#define helloworld_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_helloworld_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_helloworld_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_helloworld_2eproto;
}  // extern "C"
namespace helloworld {
class HelloWorldRequest;
struct HelloWorldRequestDefaultTypeInternal;
extern HelloWorldRequestDefaultTypeInternal
    _HelloWorldRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull
    HelloWorldRequest_class_data_;
class HelloWorldResponse;
struct HelloWorldResponseDefaultTypeInternal;
extern HelloWorldResponseDefaultTypeInternal
    _HelloWorldResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull
    HelloWorldResponse_class_data_;
}  // namespace helloworld
namespace google {
namespace protobuf {}  // namespace protobuf
}  // namespace google

namespace helloworld {

// ===================================================================

// -------------------------------------------------------------------

class HelloWorldResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:helloworld.HelloWorldResponse) */ {
 public:
  inline HelloWorldResponse() : HelloWorldResponse(nullptr) {}
  ~HelloWorldResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HelloWorldResponse* PROTOBUF_NONNULL msg,
                       std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HelloWorldResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HelloWorldResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline HelloWorldResponse(const HelloWorldResponse& from)
      : HelloWorldResponse(nullptr, from) {}
  inline HelloWorldResponse(HelloWorldResponse&& from) noexcept
      : HelloWorldResponse(nullptr, ::std::move(from)) {}
  inline HelloWorldResponse& operator=(const HelloWorldResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline HelloWorldResponse& operator=(HelloWorldResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(
            GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL
  GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL
  GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HelloWorldResponse& default_instance() {
    return *reinterpret_cast<const HelloWorldResponse*>(
        &_HelloWorldResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(HelloWorldResponse& a, HelloWorldResponse& b) { a.Swap(&b); }
  inline void Swap(HelloWorldResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(),
                                                         other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HelloWorldResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HelloWorldResponse* PROTOBUF_NONNULL
  New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HelloWorldResponse>(
        arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HelloWorldResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HelloWorldResponse& from) {
    HelloWorldResponse::MergeImpl(*this, from);
  }

 private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

 public:
  bool IsInitialized() const { return true; }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
 private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg,
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

 public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

 private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HelloWorldResponse* PROTOBUF_NONNULL other);

 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "helloworld.HelloWorldResponse";
  }

 protected:
  explicit HelloWorldResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  HelloWorldResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                     const HelloWorldResponse& from);
  HelloWorldResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                     HelloWorldResponse&& from) noexcept
      : HelloWorldResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
  GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL
  PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kCurrentCountFieldNumber = 1,
  };
  // string message = 2;
  void clear_message();
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

 private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

 public:
  // int64 current_count = 1;
  void clear_current_count();
  ::int64_t current_count() const;
  void set_current_count(::int64_t value);

 private:
  ::int64_t _internal_current_count() const;
  void _internal_set_current_count(::int64_t value);

 public:
  // @@protoc_insertion_point(class_scope:helloworld.HelloWorldResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 45, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const HelloWorldResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::int64_t current_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_helloworld_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull
    HelloWorldResponse_class_data_;
// -------------------------------------------------------------------

class HelloWorldRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:helloworld.HelloWorldRequest) */ {
 public:
  inline HelloWorldRequest() : HelloWorldRequest(nullptr) {}
  ~HelloWorldRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HelloWorldRequest* PROTOBUF_NONNULL msg,
                       std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HelloWorldRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HelloWorldRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline HelloWorldRequest(const HelloWorldRequest& from)
      : HelloWorldRequest(nullptr, from) {}
  inline HelloWorldRequest(HelloWorldRequest&& from) noexcept
      : HelloWorldRequest(nullptr, ::std::move(from)) {}
  inline HelloWorldRequest& operator=(const HelloWorldRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HelloWorldRequest& operator=(HelloWorldRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(
            GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL
  GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL
  GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HelloWorldRequest& default_instance() {
    return *reinterpret_cast<const HelloWorldRequest*>(
        &_HelloWorldRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(HelloWorldRequest& a, HelloWorldRequest& b) { a.Swap(&b); }
  inline void Swap(HelloWorldRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(),
                                                         other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HelloWorldRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HelloWorldRequest* PROTOBUF_NONNULL
  New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HelloWorldRequest>(
        arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HelloWorldRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HelloWorldRequest& from) {
    HelloWorldRequest::MergeImpl(*this, from);
  }

 private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

 public:
  bool IsInitialized() const { return true; }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
 private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg,
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

 public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

 private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HelloWorldRequest* PROTOBUF_NONNULL other);

 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "helloworld.HelloWorldRequest";
  }

 protected:
  explicit HelloWorldRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  HelloWorldRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                    const HelloWorldRequest& from);
  HelloWorldRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                    HelloWorldRequest&& from) noexcept
      : HelloWorldRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
  GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL
  PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kIncrementFieldNumber = 1,
  };
  // string message = 2;
  void clear_message();
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

 private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

 public:
  // int64 increment = 1;
  void clear_increment();
  ::int64_t increment() const;
  void set_increment(::int64_t value);

 private:
  ::int64_t _internal_increment() const;
  void _internal_set_increment(::int64_t value);

 public:
  // @@protoc_insertion_point(class_scope:helloworld.HelloWorldRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 44, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const HelloWorldRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::int64_t increment_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_helloworld_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull
    HelloWorldRequest_class_data_;

// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// HelloWorldRequest

// int64 increment = 1;
inline void HelloWorldRequest::clear_increment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.increment_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t HelloWorldRequest::increment() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloWorldRequest.increment)
  return _internal_increment();
}
inline void HelloWorldRequest::set_increment(::int64_t value) {
  _internal_set_increment(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:helloworld.HelloWorldRequest.increment)
}
inline ::int64_t HelloWorldRequest::_internal_increment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.increment_;
}
inline void HelloWorldRequest::_internal_set_increment(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.increment_ = value;
}

// string message = 2;
inline void HelloWorldRequest::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& HelloWorldRequest::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:helloworld.HelloWorldRequest.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void HelloWorldRequest::set_message(Arg_&& arg,
                                                           Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:helloworld.HelloWorldRequest.message)
}
inline ::std::string* PROTOBUF_NONNULL HelloWorldRequest::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:helloworld.HelloWorldRequest.message)
  return _s;
}
inline const ::std::string& HelloWorldRequest::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void HelloWorldRequest::_internal_set_message(
    const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL
HelloWorldRequest::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE HelloWorldRequest::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:helloworld.HelloWorldRequest.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void HelloWorldRequest::set_allocated_message(
    ::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() &&
      _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloWorldRequest.message)
}

// -------------------------------------------------------------------

// HelloWorldResponse

// int64 current_count = 1;
inline void HelloWorldResponse::clear_current_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_count_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t HelloWorldResponse::current_count() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloWorldResponse.current_count)
  return _internal_current_count();
}
inline void HelloWorldResponse::set_current_count(::int64_t value) {
  _internal_set_current_count(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:helloworld.HelloWorldResponse.current_count)
}
inline ::int64_t HelloWorldResponse::_internal_current_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_count_;
}
inline void HelloWorldResponse::_internal_set_current_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_count_ = value;
}

// string message = 2;
inline void HelloWorldResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& HelloWorldResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:helloworld.HelloWorldResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void HelloWorldResponse::set_message(Arg_&& arg,
                                                            Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:helloworld.HelloWorldResponse.message)
}
inline ::std::string* PROTOBUF_NONNULL HelloWorldResponse::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:helloworld.HelloWorldResponse.message)
  return _s;
}
inline const ::std::string& HelloWorldResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void HelloWorldResponse::_internal_set_message(
    const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL
HelloWorldResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.message_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE HelloWorldResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:helloworld.HelloWorldResponse.message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void HelloWorldResponse::set_allocated_message(
    ::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() &&
      _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloWorldResponse.message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace helloworld

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // helloworld_2eproto_2epb_2eh
