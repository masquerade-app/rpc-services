// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: messaging.proto

#include "messaging.grpc.pb.h"

#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/server_context.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/support/sync_stream.h>

#include <functional>
#include <grpcpp/ports_def.inc>

#include "messaging.pb.h"
namespace messaging {

std::unique_ptr<Messaging::Stub> Messaging::NewStub(
    const std::shared_ptr< ::grpc::ChannelInterface>& channel,
    const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr<Messaging::Stub> stub(new Messaging::Stub(channel, options));
  return stub;
}

Messaging::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel,
                      const ::grpc::StubOptions& options)
    : channel_(channel) {}

Messaging::Service::Service() {}

Messaging::Service::~Service() {}

}  // namespace messaging
#include <grpcpp/ports_undef.inc>
