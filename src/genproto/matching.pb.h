// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: matching.proto
// Protobuf C++ Version: 6.31.0

#ifndef matching_2eproto_2epb_2eh
#define matching_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "profile.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_matching_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_matching_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_matching_2eproto;
}  // extern "C"
namespace matching {
class CheckMatchRequest;
struct CheckMatchRequestDefaultTypeInternal;
extern CheckMatchRequestDefaultTypeInternal
    _CheckMatchRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull
    CheckMatchRequest_class_data_;
class CheckMatchResponse;
struct CheckMatchResponseDefaultTypeInternal;
extern CheckMatchResponseDefaultTypeInternal
    _CheckMatchResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull
    CheckMatchResponse_class_data_;
class ListMatchesRequest;
struct ListMatchesRequestDefaultTypeInternal;
extern ListMatchesRequestDefaultTypeInternal
    _ListMatchesRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull
    ListMatchesRequest_class_data_;
class ListMatchesResponse;
struct ListMatchesResponseDefaultTypeInternal;
extern ListMatchesResponseDefaultTypeInternal
    _ListMatchesResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull
    ListMatchesResponse_class_data_;
}  // namespace matching
namespace google {
namespace protobuf {}  // namespace protobuf
}  // namespace google

namespace matching {

// ===================================================================

// -------------------------------------------------------------------

class ListMatchesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:matching.ListMatchesRequest) */ {
 public:
  inline ListMatchesRequest() : ListMatchesRequest(nullptr) {}
  ~ListMatchesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListMatchesRequest* PROTOBUF_NONNULL msg,
                       std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListMatchesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListMatchesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListMatchesRequest(const ListMatchesRequest& from)
      : ListMatchesRequest(nullptr, from) {}
  inline ListMatchesRequest(ListMatchesRequest&& from) noexcept
      : ListMatchesRequest(nullptr, ::std::move(from)) {}
  inline ListMatchesRequest& operator=(const ListMatchesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListMatchesRequest& operator=(ListMatchesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(
            GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL
  GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL
  GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListMatchesRequest& default_instance() {
    return *reinterpret_cast<const ListMatchesRequest*>(
        &_ListMatchesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ListMatchesRequest& a, ListMatchesRequest& b) { a.Swap(&b); }
  inline void Swap(ListMatchesRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(),
                                                         other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListMatchesRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListMatchesRequest* PROTOBUF_NONNULL
  New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListMatchesRequest>(
        arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListMatchesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListMatchesRequest& from) {
    ListMatchesRequest::MergeImpl(*this, from);
  }

 private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

 public:
  bool IsInitialized() const { return true; }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
 private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg,
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

 public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

 private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListMatchesRequest* PROTOBUF_NONNULL other);

 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "matching.ListMatchesRequest";
  }

 protected:
  explicit ListMatchesRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ListMatchesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                     const ListMatchesRequest& from);
  ListMatchesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                     ListMatchesRequest&& from) noexcept
      : ListMatchesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
  GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL
  PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
  };
  // optional int64 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  ::int64_t account_id() const;
  void set_account_id(::int64_t value);

 private:
  ::int64_t _internal_account_id() const;
  void _internal_set_account_id(::int64_t value);

 public:
  // @@protoc_insertion_point(class_scope:matching.ListMatchesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ListMatchesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t account_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_matching_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull
    ListMatchesRequest_class_data_;
// -------------------------------------------------------------------

class CheckMatchResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:matching.CheckMatchResponse) */ {
 public:
  inline CheckMatchResponse() : CheckMatchResponse(nullptr) {}
  ~CheckMatchResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CheckMatchResponse* PROTOBUF_NONNULL msg,
                       std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CheckMatchResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CheckMatchResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CheckMatchResponse(const CheckMatchResponse& from)
      : CheckMatchResponse(nullptr, from) {}
  inline CheckMatchResponse(CheckMatchResponse&& from) noexcept
      : CheckMatchResponse(nullptr, ::std::move(from)) {}
  inline CheckMatchResponse& operator=(const CheckMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckMatchResponse& operator=(CheckMatchResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(
            GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL
  GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL
  GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckMatchResponse& default_instance() {
    return *reinterpret_cast<const CheckMatchResponse*>(
        &_CheckMatchResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CheckMatchResponse& a, CheckMatchResponse& b) { a.Swap(&b); }
  inline void Swap(CheckMatchResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(),
                                                         other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckMatchResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckMatchResponse* PROTOBUF_NONNULL
  New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CheckMatchResponse>(
        arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckMatchResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CheckMatchResponse& from) {
    CheckMatchResponse::MergeImpl(*this, from);
  }

 private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

 public:
  bool IsInitialized() const { return true; }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
 private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg,
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

 public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

 private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CheckMatchResponse* PROTOBUF_NONNULL other);

 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "matching.CheckMatchResponse";
  }

 protected:
  explicit CheckMatchResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CheckMatchResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                     const CheckMatchResponse& from);
  CheckMatchResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                     CheckMatchResponse&& from) noexcept
      : CheckMatchResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
  GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL
  PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMatchedFieldNumber = 1,
  };
  // optional bool matched = 1;
  bool has_matched() const;
  void clear_matched();
  bool matched() const;
  void set_matched(bool value);

 private:
  bool _internal_matched() const;
  void _internal_set_matched(bool value);

 public:
  // @@protoc_insertion_point(class_scope:matching.CheckMatchResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CheckMatchResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool matched_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_matching_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull
    CheckMatchResponse_class_data_;
// -------------------------------------------------------------------

class CheckMatchRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:matching.CheckMatchRequest) */ {
 public:
  inline CheckMatchRequest() : CheckMatchRequest(nullptr) {}
  ~CheckMatchRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CheckMatchRequest* PROTOBUF_NONNULL msg,
                       std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CheckMatchRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CheckMatchRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CheckMatchRequest(const CheckMatchRequest& from)
      : CheckMatchRequest(nullptr, from) {}
  inline CheckMatchRequest(CheckMatchRequest&& from) noexcept
      : CheckMatchRequest(nullptr, ::std::move(from)) {}
  inline CheckMatchRequest& operator=(const CheckMatchRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckMatchRequest& operator=(CheckMatchRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(
            GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL
  GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL
  GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckMatchRequest& default_instance() {
    return *reinterpret_cast<const CheckMatchRequest*>(
        &_CheckMatchRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CheckMatchRequest& a, CheckMatchRequest& b) { a.Swap(&b); }
  inline void Swap(CheckMatchRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(),
                                                         other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckMatchRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckMatchRequest* PROTOBUF_NONNULL
  New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CheckMatchRequest>(
        arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckMatchRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CheckMatchRequest& from) {
    CheckMatchRequest::MergeImpl(*this, from);
  }

 private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

 public:
  bool IsInitialized() const { return true; }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
 private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg,
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

 public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

 private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CheckMatchRequest* PROTOBUF_NONNULL other);

 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "matching.CheckMatchRequest";
  }

 protected:
  explicit CheckMatchRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CheckMatchRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                    const CheckMatchRequest& from);
  CheckMatchRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                    CheckMatchRequest&& from) noexcept
      : CheckMatchRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
  GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL
  PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCheckerAccountIdFieldNumber = 1,
    kCheckedAccountIdFieldNumber = 2,
  };
  // optional int64 checker_account_id = 1;
  bool has_checker_account_id() const;
  void clear_checker_account_id();
  ::int64_t checker_account_id() const;
  void set_checker_account_id(::int64_t value);

 private:
  ::int64_t _internal_checker_account_id() const;
  void _internal_set_checker_account_id(::int64_t value);

 public:
  // optional int64 checked_account_id = 2;
  bool has_checked_account_id() const;
  void clear_checked_account_id();
  ::int64_t checked_account_id() const;
  void set_checked_account_id(::int64_t value);

 private:
  ::int64_t _internal_checked_account_id() const;
  void _internal_set_checked_account_id(::int64_t value);

 public:
  // @@protoc_insertion_point(class_scope:matching.CheckMatchRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CheckMatchRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t checker_account_id_;
    ::int64_t checked_account_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_matching_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull
    CheckMatchRequest_class_data_;
// -------------------------------------------------------------------

class ListMatchesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:matching.ListMatchesResponse) */ {
 public:
  inline ListMatchesResponse() : ListMatchesResponse(nullptr) {}
  ~ListMatchesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListMatchesResponse* PROTOBUF_NONNULL msg,
                       std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListMatchesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListMatchesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListMatchesResponse(const ListMatchesResponse& from)
      : ListMatchesResponse(nullptr, from) {}
  inline ListMatchesResponse(ListMatchesResponse&& from) noexcept
      : ListMatchesResponse(nullptr, ::std::move(from)) {}
  inline ListMatchesResponse& operator=(const ListMatchesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListMatchesResponse& operator=(ListMatchesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(
            GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .unknown_fields<::google::protobuf::UnknownFieldSet>(
            ::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL
  mutable_unknown_fields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_
        .mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL
  GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL
  GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListMatchesResponse& default_instance() {
    return *reinterpret_cast<const ListMatchesResponse*>(
        &_ListMatchesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ListMatchesResponse& a, ListMatchesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListMatchesResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(),
                                                         other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListMatchesResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListMatchesResponse* PROTOBUF_NONNULL
  New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListMatchesResponse>(
        arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListMatchesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListMatchesResponse& from) {
    ListMatchesResponse::MergeImpl(*this, from);
  }

 private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

 public:
  bool IsInitialized() const { return true; }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
#if defined(PROTOBUF_CUSTOM_VTABLE)
 private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg,
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

 public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const {
    return _InternalSerialize(*this, target, stream);
  }
#else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL
          stream) const final;
#endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

 private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListMatchesResponse* PROTOBUF_NONNULL other);

 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() {
    return "matching.ListMatchesResponse";
  }

 protected:
  explicit ListMatchesResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ListMatchesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                      const ListMatchesResponse& from);
  ListMatchesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
                      ListMatchesResponse&& from) noexcept
      : ListMatchesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
  GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL
  PlacementNew_(const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
                ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProfileFieldNumber = 1,
    kPageTokenFieldNumber = 2,
  };
  // repeated .profile.ProfileCard profile = 1;
  int profile_size() const;

 private:
  int _internal_profile_size() const;

 public:
  void clear_profile();
  ::profile::ProfileCard* PROTOBUF_NONNULL mutable_profile(int index);
  ::google::protobuf::RepeatedPtrField<::profile::ProfileCard>* PROTOBUF_NONNULL
  mutable_profile();

 private:
  const ::google::protobuf::RepeatedPtrField<::profile::ProfileCard>&
  _internal_profile() const;
  ::google::protobuf::RepeatedPtrField<::profile::ProfileCard>* PROTOBUF_NONNULL
  _internal_mutable_profile();

 public:
  const ::profile::ProfileCard& profile(int index) const;
  ::profile::ProfileCard* PROTOBUF_NONNULL add_profile();
  const ::google::protobuf::RepeatedPtrField<::profile::ProfileCard>& profile()
      const;
  // optional string page_token = 2;
  bool has_page_token() const;
  void clear_page_token();
  const ::std::string& page_token() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_page_token(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_page_token();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_page_token();
  void set_allocated_page_token(::std::string* PROTOBUF_NULLABLE value);

 private:
  const ::std::string& _internal_page_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_page_token(
      const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_page_token();

 public:
  // @@protoc_insertion_point(class_scope:matching.ListMatchesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 47, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ListMatchesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::profile::ProfileCard> profile_;
    ::google::protobuf::internal::ArenaStringPtr page_token_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union {
    Impl_ _impl_;
  };
  friend struct ::TableStruct_matching_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull
    ListMatchesResponse_class_data_;

// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CheckMatchRequest

// optional int64 checker_account_id = 1;
inline bool CheckMatchRequest::has_checker_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CheckMatchRequest::clear_checker_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checker_account_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t CheckMatchRequest::checker_account_id() const {
  // @@protoc_insertion_point(field_get:matching.CheckMatchRequest.checker_account_id)
  return _internal_checker_account_id();
}
inline void CheckMatchRequest::set_checker_account_id(::int64_t value) {
  _internal_set_checker_account_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:matching.CheckMatchRequest.checker_account_id)
}
inline ::int64_t CheckMatchRequest::_internal_checker_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checker_account_id_;
}
inline void CheckMatchRequest::_internal_set_checker_account_id(
    ::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checker_account_id_ = value;
}

// optional int64 checked_account_id = 2;
inline bool CheckMatchRequest::has_checked_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CheckMatchRequest::clear_checked_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checked_account_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t CheckMatchRequest::checked_account_id() const {
  // @@protoc_insertion_point(field_get:matching.CheckMatchRequest.checked_account_id)
  return _internal_checked_account_id();
}
inline void CheckMatchRequest::set_checked_account_id(::int64_t value) {
  _internal_set_checked_account_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:matching.CheckMatchRequest.checked_account_id)
}
inline ::int64_t CheckMatchRequest::_internal_checked_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checked_account_id_;
}
inline void CheckMatchRequest::_internal_set_checked_account_id(
    ::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checked_account_id_ = value;
}

// -------------------------------------------------------------------

// CheckMatchResponse

// optional bool matched = 1;
inline bool CheckMatchResponse::has_matched() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CheckMatchResponse::clear_matched() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matched_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CheckMatchResponse::matched() const {
  // @@protoc_insertion_point(field_get:matching.CheckMatchResponse.matched)
  return _internal_matched();
}
inline void CheckMatchResponse::set_matched(bool value) {
  _internal_set_matched(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:matching.CheckMatchResponse.matched)
}
inline bool CheckMatchResponse::_internal_matched() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.matched_;
}
inline void CheckMatchResponse::_internal_set_matched(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.matched_ = value;
}

// -------------------------------------------------------------------

// ListMatchesRequest

// optional int64 account_id = 1;
inline bool ListMatchesRequest::has_account_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ListMatchesRequest::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t ListMatchesRequest::account_id() const {
  // @@protoc_insertion_point(field_get:matching.ListMatchesRequest.account_id)
  return _internal_account_id();
}
inline void ListMatchesRequest::set_account_id(::int64_t value) {
  _internal_set_account_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:matching.ListMatchesRequest.account_id)
}
inline ::int64_t ListMatchesRequest::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_;
}
inline void ListMatchesRequest::_internal_set_account_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_ = value;
}

// -------------------------------------------------------------------

// ListMatchesResponse

// repeated .profile.ProfileCard profile = 1;
inline int ListMatchesResponse::_internal_profile_size() const {
  return _internal_profile().size();
}
inline int ListMatchesResponse::profile_size() const {
  return _internal_profile_size();
}
inline ::profile::ProfileCard* PROTOBUF_NONNULL
ListMatchesResponse::mutable_profile(int index) ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:matching.ListMatchesResponse.profile)
  return _internal_mutable_profile()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::profile::ProfileCard>*
    PROTOBUF_NONNULL
    ListMatchesResponse::mutable_profile() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:matching.ListMatchesResponse.profile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_profile();
}
inline const ::profile::ProfileCard& ListMatchesResponse::profile(
    int index) const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:matching.ListMatchesResponse.profile)
  return _internal_profile().Get(index);
}
inline ::profile::ProfileCard* PROTOBUF_NONNULL
ListMatchesResponse::add_profile() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::profile::ProfileCard* _add = _internal_mutable_profile()->Add();
  // @@protoc_insertion_point(field_add:matching.ListMatchesResponse.profile)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::profile::ProfileCard>&
ListMatchesResponse::profile() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:matching.ListMatchesResponse.profile)
  return _internal_profile();
}
inline const ::google::protobuf::RepeatedPtrField<::profile::ProfileCard>&
ListMatchesResponse::_internal_profile() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.profile_;
}
inline ::google::protobuf::RepeatedPtrField<::profile::ProfileCard>*
    PROTOBUF_NONNULL
    ListMatchesResponse::_internal_mutable_profile() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.profile_;
}

// optional string page_token = 2;
inline bool ListMatchesResponse::has_page_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ListMatchesResponse::clear_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.page_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ListMatchesResponse::page_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:matching.ListMatchesResponse.page_token)
  return _internal_page_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ListMatchesResponse::set_page_token(Arg_&& arg,
                                                                Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.page_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:matching.ListMatchesResponse.page_token)
}
inline ::std::string* PROTOBUF_NONNULL ListMatchesResponse::mutable_page_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_page_token();
  // @@protoc_insertion_point(field_mutable:matching.ListMatchesResponse.page_token)
  return _s;
}
inline const ::std::string& ListMatchesResponse::_internal_page_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.page_token_.Get();
}
inline void ListMatchesResponse::_internal_set_page_token(
    const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.page_token_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL
ListMatchesResponse::_internal_mutable_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.page_token_.Mutable(GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE
ListMatchesResponse::release_page_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:matching.ListMatchesResponse.page_token)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.page_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.page_token_.Set("", GetArena());
  }
  return released;
}
inline void ListMatchesResponse::set_allocated_page_token(
    ::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.page_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() &&
      _impl_.page_token_.IsDefault()) {
    _impl_.page_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:matching.ListMatchesResponse.page_token)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace matching

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // matching_2eproto_2epb_2eh
